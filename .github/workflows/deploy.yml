name: Deploy Node.js App on Azure VM

on:
  push:
    branches:
      - master  # Triggers workflow when code is pushed to 'master'

jobs:
  deploy:
    runs-on: ubuntu-latest

    permissions:
      id-token: write  # Added the permissions to allow ID token access

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Log in to Azure
        uses: azure/login@v1
        with:
          creds: '{"clientId": "${{ secrets.AZURE_CLIENT_ID }}", "clientSecret": "${{ secrets.AZURE_CLIENT_SECRET }}", "tenantId": "${{ secrets.AZURE_TENANT_ID }}", "subscriptionId": "${{ secrets.AZURE_SUBSCRIPTION_ID }}"}'
          environment: azurecloud
          allow-no-subscriptions: false

      - name: Set up Terraform
        uses: hashicorp/setup-terraform@v2

      - name: Initialize Terraform
        run: terraform init

      - name: Apply Terraform configuration
        run: terraform apply -auto-approve

      - name: Get Public IP from Terraform Output
        id: get-ip
        run: echo "PUBLIC_IP=$(terraform output -raw public_ip)" >> $GITHUB_ENV

      - name: Wait for VM to be ready
        run: sleep 60  # Give VM time to boot up

      - name: Install Docker on Azure VM
        uses: appleboy/ssh-action@v0.1.7
        with:
          host: ${{ env.PUBLIC_IP }}
          username: azureuser
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          script: |
            bash install-docker.sh

      - name: Deploy Node.js App in Docker Container
        uses: appleboy/ssh-action@v0.1.7
        with:
          host: ${{ env.PUBLIC_IP }}
          username: azureuser
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          script: |
            cd docker_app/nodejs-app-first-dockerfile
            docker build -t nodejs-app .
            docker run -d -p 8080:8080 --name nodejs-container nodejs-app

      - name: Output Application URL
        run: echo "Your Node.js app is live at http://${{ env.PUBLIC_IP }}:8080"
